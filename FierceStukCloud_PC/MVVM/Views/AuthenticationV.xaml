<Window x:Class="FierceStukCloud_PC.MVVM.Views.AuthorizationV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FierceStukCloud_PC.MVVM.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:con="clr-namespace:FierceStukCloud_NetCoreLib.Converters;assembly=FierceStukCloud_NetCoreLib"
        mc:Ignorable="d"
        Title="FierceStukCloud" 
        
        Height="600" Width="330"
        
        WindowStyle="None" ResizeMode="NoResize">

    <!--<Window.DataContext>
        <local:AutorizationVM/>
    </Window.DataContext>-->

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FierceStukCloud_NetCoreLib;component/Resources/ResourceDictionaries/ButtonStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FierceStukCloud_NetCoreLib;component/Resources/ResourceDictionaries/TextBoxStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FierceStukCloud_NetCoreLib;component/Resources/ResourceDictionaries/TextBlockStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <con:StrLenghtToVisibilityConverter x:Key="StrLenghtToVisibility"/>
            
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="{StaticResource GrayLVL1}">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding DragWindowCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Grid x:Name="HeaderGrid" Grid.Row="0"
              Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>

            <Label x:Name="FSC" Grid.Column="0"
                   VerticalAlignment="Center"
                   
                   Padding="0"
                   Margin="5,0,0,0"
                   
                   Content="FierceStukCloud"
                   Foreground="{StaticResource StandartTextColor}"
                   FontSize="15" Height="18"/>

            <Button x:Name="MinimizeButton" Grid.Column="2"
                    
                    Command="{Binding MinimizedWindowCommand}"
                    Style="{StaticResource MinimazeButton}"/>

            <Button x:Name="CloseWindowButton" Grid.Column="3"
                    
                    Command="{Binding CloseWindowCommand}"
                    Style="{StaticResource CloseWindowButton}"/>

        </Grid>

        <Image Grid.Row="1"
               
               Margin="50,40,50,40"
               
               Source="/FierceStukCloud_NetCoreLib;component/Resources/Images/fsc_icon.png" />


        <Grid x:Name="AuthenticationGrid" Grid.Row="2"
              Background="Transparent" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <Border Grid.Row="0"
                    Margin="65,10,65,10">
                <Grid>
                    <TextBlock x:Name="loginPlace"
                               Text="Логин" 
                               Style="{StaticResource TBlock_LandP}" />
                              
                    <TextBox x:Name="loginTextBox"
                             GotFocus="loginTextBox_GotFocus"
                             LostFocus="loginBox_TextChanged"
                             TextChanged="loginBox_TextChanged"
                             Text="{Binding Login,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource TBox_Login}"/>
                    <x:Code>
                        <![CDATA[
                            private void loginBox_TextChanged(object sender, RoutedEventArgs e)
                            {
                                loginPlace.Visibility = Visibility.Visible;
                                loginPlace.Visibility = string.IsNullOrEmpty(loginTextBox.Text)
                                ? Visibility.Visible
                                : Visibility.Hidden;
                            }
                            
                            private void loginTextBox_GotFocus(object sender, RoutedEventArgs e)
                            {
                                loginPlace.Visibility = Visibility.Hidden;
                            }
                        ]]>
                    </x:Code>
                </Grid>
            </Border>

            <Border Grid.Row="1"
                    Margin="65,10,65,10">
                <Grid>
                    <TextBlock x:Name="passwordPlace"
                               Text="Пароль"
 
                               Style="{StaticResource TBlock_LandP}">
                    </TextBlock>

                    <PasswordBox x:Name="passwordBox"
                                 GotFocus="passwordBox_GotFocus"
                                 LostFocus="passwordBox_PasswordChanged"
                                 PasswordChanged="passwordBox_PasswordChanged"
                                 Style="{StaticResource TBox_Password}"/>
                    <x:Code>
                        <![CDATA[
                            private void passwordBox_PasswordChanged(object sender, RoutedEventArgs e)
                            { 
                                passwordPlace.Visibility = Visibility.Visible;
                                passwordPlace.Visibility = string.IsNullOrEmpty(passwordBox.Password)
                                ? Visibility.Visible
                                : Visibility.Hidden;
                            }
                        
                            private void passwordBox_GotFocus(object sender, RoutedEventArgs e)
                            {
                                passwordPlace.Visibility = Visibility.Hidden;
                            }
                        ]]>
                    </x:Code>
                </Grid>
            </Border>

            <Button Grid.Row="2"
                    
                    Height="25"
                    Width="100"
                    
                    VerticalAlignment="Top"
                    
                    
                    Command="{Binding AutorizationCommand}">
                <Button.Content>
                    <Border Height="25"
                            Width="100"
                            CornerRadius="10"
                            Background="{StaticResource GrayLVL0}">
                        <TextBlock Text="Вход"                                  
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Border>
                    
                </Button.Content>
            </Button>
        </Grid>

    </Grid>
</Window>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    >

    <!--#region PlayerButtons-->

    <ControlTemplate x:Key="PlayButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Ellipse x:Name="Ellipse" Fill="{x:Null}" StrokeThickness="2"/>
            <Polygon x:Name="Polygon" Fill="{StaticResource DimColor}"
                                 Points="0,0
                                         12,9
                                         0,17"
                                 
                                 Margin="3.5,0,0,0"
                                 
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"/>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Ellipse" Property="Stroke" Value="White"/>
                <Setter TargetName="Polygon" Property="Fill" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource DimColor}"/>
                <Setter TargetName="Polygon" Property="Fill" Value="{StaticResource DimColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PauseButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Ellipse x:Name="Ellipse" Fill="{x:Null}" StrokeThickness="2"/>

            <Grid Background="{x:Null}" Margin="9.5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Rectangle x:Name="Polygon1" Grid.Column="0"
                                       Margin="0.7,0,1.5,0"/>
                <Rectangle x:Name="Polygon2" Grid.Column="1"
                                       Margin="1.5,0,0.7,0"/>

            </Grid>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Ellipse" Property="Stroke" Value="White"/>
                <Setter TargetName="Polygon1" Property="Fill" Value="White"/>
                <Setter TargetName="Polygon2" Property="Fill" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource DimColor}"/>
                <Setter TargetName="Polygon1" Property="Fill" Value="{StaticResource DimColor}"/>
                <Setter TargetName="Polygon2" Property="Fill" Value="{StaticResource DimColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PlayNowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <md:PackIcon Kind="VolumeHigh"
                         Foreground="{StaticResource StandartLightColor2}"
                         Width="20" Height="20"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"/>
        </Grid>
        <ControlTemplate.Triggers>

           
            
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter TargetName="Ellipse" Property="Stroke" Value="White"/>
                <Setter TargetName="Polygon" Property="Fill" Value="White"/>-->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <!--<Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource DimColor}"/>
                <Setter TargetName="Polygon" Property="Fill" Value="{StaticResource DimColor}"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <Style x:Key="PlayButton" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource PlayButtonTemplate}"/>
        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=CurrentSong.IsPlaying}" Value="True">
                <Setter Property="Template" Value="{StaticResource PauseButtonTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CurrentSong.IsPlaying}" Value="False">
                <Setter Property="Template" Value="{StaticResource PlayButtonTemplate}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NextOrPrevSong" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent" Width="30" Height="20">
                        <Ellipse x:Name="Ellipse" Fill="{x:Null}"
                                 Stroke="{StaticResource DimColor}" 
                                 StrokeThickness="3"
                                 Visibility="Hidden"/>
                        <Polygon x:Name="Polygon" Fill="{StaticResource DimColor}"  
                                Points="0, 0,
                                        10,6,
                                        10,0,
                                        12,0,
                                        12,15,
                                        10,15,
                                        10,9,
                                        0, 15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Stroke" Value="White"/>
                            <Setter TargetName="Polygon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{StaticResource DimColor}"/>
                            <Setter TargetName="Polygon" Property="Fill" Value="{StaticResource DimColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButton" TargetType="{x:Type Button}">
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <md:PackIcon Kind="Repeat" x:Name="RepeatButton"

                                     Foreground="{StaticResource DimColor}"
                                     
                                     Width="20" Height="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LoopMode}" Value="None"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="RepeatButton" Value="White"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding LoopMode}" Value="Loop">
                            <Setter Property="Foreground" TargetName="RepeatButton" Value="{StaticResource GorWithLowOpacity}"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding LoopMode}" Value="LoopOne">
                            <Setter Property="Foreground" TargetName="RepeatButton" Value="{StaticResource GorWithLowOpacity}"/>
                            <Setter Property="Kind" TargetName="RepeatButton" Value="RepeatOne"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LoopMode}" Value="Loop"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="RepeatButton" Value="{StaticResource Gor}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LoopMode}" Value="LoopOne"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="RepeatButton" Value="{StaticResource Gor}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RandomButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <md:PackIcon Kind="Shuffle" x:Name="RandomButton"

                                     Foreground="{StaticResource DimColor}"
                                     
                                     Width="20" Height="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRandomSong}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="RandomButton" Value="White"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsRandomSong}" Value="True">
                            <Setter Property="Foreground" TargetName="RandomButton" Value="{StaticResource GorWithLowOpacity}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRandomSong}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="RandomButton" Value="{StaticResource Gor}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayListPlayButton" TargetType="{x:Type Button}">

        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Page}},
                                                               Path=DataContext.SetSongCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>

        <Style.Triggers>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsPlaying}" Value="True">
                <Setter Property="Template" Value="{StaticResource PlayNowButtonTemplate}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsPlaying}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource PauseButtonTemplate}"/>
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Page}},
                                                               Path=DataContext.PlayStateSongCommand}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsPlaying}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Hidden"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsPlaying}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsCurrentSong}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource PlayButtonTemplate}"/>
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Page}},
                                                               Path=DataContext.PlayStateSongCommand}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger> 

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext.IsCurrentSong}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource PlayButtonTemplate}"/>
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Page}},
                                                               Path=DataContext.SetSongCommand}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="FavoriteSongButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <md:PackIcon x:Name="Icon" Kind="FavoriteBorder"
                                     Width="20" Height="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Foreground="{StaticResource StandartLightColor2}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsFavorite}" Value="True">
                            <Setter Property="Kind" TargetName="Icon" Value="Favorite"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->

</ResourceDictionary>
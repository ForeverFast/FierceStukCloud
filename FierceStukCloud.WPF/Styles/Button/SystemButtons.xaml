<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:FierceStukCloud.Wpf.Styles.Button">

    <ResourceDictionary.MergedDictionaries>
       <ResourceDictionary Source="pack://application:,,,/FierceStukCloud.Wpf;component/Styles/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region  SystemButtons1 -->
    <Style x:Key="SystemButtonsBase" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="40"/>

        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Padding" Value="0"/>

        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="Template" Value="{StaticResource CT_Default1}"/>-->
    </Style>

    <Style x:Key="MinimazeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SystemButtonsBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" >
                        <Polygon x:Name="Obj1"
                                 Margin="0,5,0,0"
                             Points="10,12, 30,12, 30,15, 10,15"
                             Fill="{StaticResource StandartLightColor}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonBorder" Property="Background"
                                    Value="{StaticResource ResourceKey=Gor}" />
                            <Setter TargetName="Obj1" Property="Fill"
                                    Value="{StaticResource ResourceKey=GrayLVL1}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="ButtonBorder" Property="Background"
                                    Value="{StaticResource ResourceKey=GrayLVL1}" />
                            <Setter TargetName="Obj1" Property="Fill"
                                    Value="{StaticResource ResourceKey=StandartLightColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseWindowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SystemButtonsBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder">
                        <Grid Margin="0,5,0,0">
                            <Line x:Name="Obj1" X1="14" Y1="5" X2="26" Y2="15" StrokeThickness="3"/>
                            <Line x:Name="Obj2" X1="26" Y1="5" X2="14" Y2="15" StrokeThickness="3"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonBorder" Property="Background"
                                    Value="{StaticResource ResourceKey=Gor}" />
                            <Setter TargetName="Obj1" Property="Stroke" Value="{StaticResource ResourceKey=GrayLVL1}" />
                            <Setter TargetName="Obj2" Property="Stroke" Value="{StaticResource ResourceKey=GrayLVL1}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="ButtonBorder" Property="Background"
                                    Value="{StaticResource ResourceKey=GrayLVL1}" />
                            <Setter TargetName="Obj1" Property="Stroke"
                                    Value="{StaticResource ResourceKey=StandartLightColor}" />
                            <Setter TargetName="Obj2" Property="Stroke"
                                    Value="{StaticResource ResourceKey=StandartLightColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region SystemButtons2-->

    <Style x:Key="MinimizeButton2" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <materialDesign:PackIcon x:Name="Icon" Kind="HorizontalLine"
                                                 Background="{x:Null}"
                                                 Width="32" Height="25"
                                                 Margin="3,5,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource StandartLightColor2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ResizeButton2" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <materialDesign:PackIcon x:Name="Icon" RenderTransformOrigin="0.5,0.5" Width="32" Height="25"
                                                 >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Normal">
                            <Setter TargetName="Icon" Property="Kind" Value="CropSquare"/>
                            <Setter TargetName="Icon" Property="Margin" Value="5,1,0,0"/>
                            <Setter TargetName="Icon" Property="Width" Value="25"/>
                            <Setter TargetName="Icon" Property="Height" Value="25"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Maximized">
                            <Setter TargetName="Icon" Property="Kind" Value="ImageFilterNone"/>
                            <Setter TargetName="Icon" Property="Margin" Value="5,5,0,0"/>
                            <Setter TargetName="Icon" Property="Width" Value="17"/>
                            <Setter TargetName="Icon" Property="Height" Value="17"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource StandartLightColor2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CloseButton2" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <materialDesign:PackIcon x:Name="Icon" Kind="Close"
                                                 Background="{x:Null}"
                                                
                                                 Width="32" Height="25"
                                                 Margin="0,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <!--#endregion-->
    
</ResourceDictionary>

<!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Normal">
                           
                            <Setter TargetName="Icon" Property="Margin" Value="0,5,5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Maximized">
                           
                            <Setter TargetName="Icon" Property="Margin" Value="0,10,10,0"/>
                        </DataTrigger>-->
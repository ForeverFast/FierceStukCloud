<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converter="clr-namespace:FierceStukCloud.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary 
            Source="pack://application:,,,/FierceStukCloud.Wpf;component/Brushes.xaml"/>
        <ResourceDictionary
            Source="pack://application:,,,/FierceStukCloud.Wpf;component/Dictionaries/Window/WindowMusicPlayerButtons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converter:ManyValuesConverter x:Key="ManyValuesConverter"/>

    <Style x:Key="ItemContainerStyle_Default" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="42"/>

        <Setter Property="Foreground" Value="{StaticResource StandartLightColor2}"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>

        <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}},
                                               Path=DataContext}"/>

        <!--<Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>-->
        <!--<Setter Property="ContextMenu" Value="{StaticResource }"/>-->

        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Background="{StaticResource GrayLVL1}" 
                             Foreground="{StaticResource StandartLightColor}">

                    <MenuItem Header="Перейти к исполнителю" TextBlock.FontSize="14"/>
                    <MenuItem Header="Перейти к Альбому" TextBlock.FontSize="14"/>
                    <MenuItem Header="Показать сведения" TextBlock.FontSize="14"/>
                    <Separator/>
                    <MenuItem Header="Добивать в любимые треки" TextBlock.FontSize="14"/>
                    <MenuItem Header="Добавить в плейлист" TextBlock.FontSize="14" 
                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType={x:Type ContextMenu}},
                                                    Path=PlacementTarget.Tag.PlayLists}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType={x:Type ContextMenu}},
                                                          Path=PlacementTarget.Tag.AddToAnotherPlayListCommand}"
                                        CommandParameter="{Binding}">
                                   
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border>
                                                <TextBlock Text="{Binding Title}" Width="180"
                                                           TextTrimming="CharacterEllipsis"
                                                           VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                               
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Удалить из этого плейлиста" TextBlock.FontSize="14"/>

                </ContextMenu>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">

                    <Border x:Name="Border"
                                        BorderBrush="{StaticResource DimColorWithLowOpacity2}"
                                        BorderThickness="0,0,0,1">

                        <Border.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick"
                                          Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                        AncestorType={x:Type ListView}},
                                                        Path=DataContext.SetSongCommand}"
                                          CommandParameter="{Binding}"/>
                        </Border.InputBindings>

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderColor" Color="Transparent" />
                        </Border.Background>

                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderColor"
                                                                            Storyboard.TargetProperty="Color" To="Transparent" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderColor"
                                                                            Storyboard.TargetProperty="Color" To="{StaticResource GrayLVL1_Color}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderColor"
                                                                            Storyboard.TargetProperty="Color" To="{StaticResource GrayLVL0_Color}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Style="{StaticResource ListViewPlayButton}"/>

                            <Button Grid.Column="1"
                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}},
                                                        Path=DataContext.AddOrRemoveInFavouritesCommand}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource FavoriteSongButton}"/>

                            <GridViewRowPresenter Grid.Column="2" ClipToBounds="True"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Button Grid.Column="3" Visibility="Visible">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Menu Background="Transparent">
                                            <md:PackIcon Kind="MoreHoriz" x:Name="Icon" 
                                                                             Width="30" Height="30"
                                                                             VerticalAlignment="Center"
                                                                             HorizontalAlignment="Center"
                                                                             Foreground="{StaticResource StandartLightColor}"/>
                                        </Menu>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource StandartLightColor2}"/>
                                            </Trigger>

                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCurrentSong}" Value="True" >
                <Setter Property="Foreground" Value="{StaticResource Gor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeaderStyle_Default" TargetType="{x:Type GridViewColumnHeader}">

        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Padding="85,0,0,0" 
                            Height="40"
                                                        
                            BorderThickness="0,0,0,1"
                            BorderBrush="{StaticResource DimColorWithLowOpacity2}">
                        <ContentPresenter Margin="0,0,0,0" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth,
                                                                                   Converter={StaticResource WidthWindowToWidthGridConverter},
                                                                                   ConverterParameter=200}" Value="True">
                                        <Setter Property="ctrl:GridViewColumnVisibilityManager.IsVisible" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth,
                                                                                   Converter={StaticResource WidthWindowToWidthGridConverter},
                                                                                   ConverterParameter=200}" Value="False">
                                        <Setter Property="ctrl:GridViewColumnVisibilityManager.IsVisible" Value="False"/>
                                    </DataTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemContainerTemplate x:Key="ItemContainerTemplate_Default">
        <Grid>
            <TextBlock Text="{Binding}" 
                        HorizontalAlignment="Left"
                        Foreground="{StaticResource StandartLightColor}"/>
        </Grid>
    </ItemContainerTemplate>

    <Style x:Key="LIstViewStyle_Default" TargetType="{x:Type ListView}">

        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Background="{StaticResource GrayLVL1}" 
                             Foreground="{StaticResource StandartLightColor}">

                </ContextMenu>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle" Value="{StaticResource ItemContainerStyle_Default}"/>
    </Style>

</ResourceDictionary>